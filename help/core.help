%{help=common}%{+o|o}
###  %b(the +c 'common' flag)%b
   Sometimes a lot of people use irc from the same account, i.e.
   example, a public telnet site.  In that case, many people can
   have the same user@host.  For that reason, they can't use a 
   traditional user record because they will appear to all be 
   the same person.
  
   In such cases, create a user record for the account, and mark
   it +c, or "common access".  Marking it as "common access" means 
   that it shouldn't be used as a definitive address.  When someone 
   introduces themself to the bot (ie, by /msg'ing "hello")and matches 
   as a +c user, they will be given a new user record which identifies 
   them BY NICKNAME.

   Obviously people with that kind of user record shouldn't be given
   much special access, as when they change nicknames the bot
   will identify them as someone else.
%{help=help}
DCC COMMANDS for %B, %V:
%b  who          away         quit         whom         me%b
%b  whois        page         match        motd         bots%b
%b  addlog       newpass      console      chat         handle%b
%b  echo         strip        su           trace        fixcodes%b
%{+t}
For botnet masters:
%b  +bot         botattr      chhandle     chpass       +host%b
%b  -bot         link         chaddr       relay        -host%b
%b  unlink       boot         bottree      botinfo%b
%{+m|m}
For masters:
%b  chattr       save         backup       reload       status%b
%{+m}
%b  +user        +ignore      comment      binds        ignores%b
%b  -user        -ignore      dccstat      debug        banner%b
%b  rehash       restart      uptime       clearqueue%b
%{+n}
For owners:
%b  die          simul        module       loadmod      unloadmod%b
%b  set          tcl          rehelp       modules      +lang%b
%b  -lang        +lsec        -lsec        lstat        relang%b
%{-}
All commands begin with '.' and all else goes to the party line.
%{+m}Text starting with ',' is sent ONLY to bot-masters.%{end}
You can get help on individual commands: %b'.help <command>'%b
Extra help relating to loaded modules may be obtained by typing
%b'.help <module> module'%b, possible modules include
  %bassoc%b  %bchannels%b  %bconsole%b  %bctcp%b    %btransfer%b
  %birc%b    %bnotes%b     %bseen%b     %bserver%b  %bshare%b
These are distributed with the bot, and they may be loaded, others can
be added also. You may receive a list of cmds in all loaded modules by
using %b'.help all'%b.
If you only remember a part of the command's name you are searching
for, just use wildcards (e.g. %b'.help *bot*'%b) and all matching help
texts will be displayed.
%{help=+lang}%{+n}
###  %b+lang%b <language>
   Adds a new language to the top of the language list. All sections
   are rechecked to test if there are language files supporting the language.

See also: -lang, +lsec, -lsec, lstat, relang
%{help=-lang}%{+n}
###  %b-lang%b <language>
   Removes a language from the language list. All sections are checked if
   they are using the language and if so, try to load the next available
   language instead.
 
See also: +lang, +lsec, -lsec, lstat, relang
%{help=+lsec}%{+n}
###  %b+lsec%b <section>
   Adds a new section. The bot tries to load the section with the preferred
   language if possible.

See also: +lang, -lang, -lsec, lstat, relang
%{help=-lsec}%{+n}
###  %b-lsec%b <section>
   Removes a section. The language bindings are not removed though.

See also: +lang, -lang, +lsec, lstat, relang
%{help=lstat}%{+n}
###  %blstat%b
   Shows the language statistics, all selected languages and a list of all
   language sections.

See also: +lang, -lang, +lsec, -lsec, relang
%{help=relang}%{+n}
###  %brelang%b
   Try to find language files with a more preferred language than right now.

See also: +lang, -lang, +lsec, -lsec, lstat

%{help=helpparty}
%B party-line commands:
  %b.quit%b              leave the party line
  %b.whom%b [channel]    show list of all users on the party line, or
                        on a particular channel
  %b.whom *%b            show list of all users, indicating which ones
                        are on the party line
  %b.chat%b <channel>    move to a channel (valid channels are 1 to 99999,
                        channel 0 is the party line)
  %b.me%b <action>       do an action on the party line
  %b.note%b <who> <msg>  send a private note to someone else on the
                        party line
  %b.handle%b <handle>   changes nick on party line
  %b.help%b <command>    get more help on a specific command
The following commands are also available:
%b   bots      newpass   email     who       echo   %b    
%b   info      away      back      strip     trace%b
%b   page      su        fixcodes  motd      whom%b
%b%{+x}   files%{-}%b
Anything you type that doesn't begin with a '.' goes out to
everyone on the party line.
%{help=tcl}%{+n}
###  %btcl%b <command>
   executes the command using tcl.

   See doc/tcl-commands.doc for details on tcl commands added to eggdrop
   and visit http://dev.scriptics.com/ for more information on tcl.
%{help=set}%{+n}
###  %bset%b <variable> [value]
   changes the values of internal settings of the bot, or, if used
   without a value parameter, shows the current value of a setting.
   the bot starts out with settings as given in the configuration
   file.  here are the variables eggdrop cares about:
%{cols=4}
mod-path
nat-ip
dcc-flood-thr
die-on-sighup
die-on-sigterm
remote-boots
max-dcc
max-logs
enable-simul
protect-telnet
ident-timeout
share-unlinks
allow-dk-cmds
botnet-nick
help-path
temp-path
userfile
motd
notify-newusers
admin
owner
my-hostname
my-ip
network
save-users-at
switch-logfiles-at
connect-timeout
reserved-port
log-time
require-p
keep-all-logs
open-telnets
firewall
console
default-flags
whois-fields
hourly-updates
username
ignore-time
uptime
version
numversion
telnet-flood
%{end}
   use %b'.help set <variable>'%b for more info on each variable.
%{+n}
%{help=all}
###  %bcore%b commands
%b  who          away         quit         whom         me%b
%b  whois        page         match        motd         bots%b
%b  addlog       newpass      console      chat         handle%b
%b  echo         strip        su           trace        fixcodes%b
%{+t}
For botnet masters:
%b  +bot         botattr      chhandle     chpass       +host%b
%b  -bot         link         chaddr       relay        -host%b
%b  unlink       boot         bottree      botinfo%b
%{+m|m}
For masters:
%b  chattr       save         backup       reload       status%b
%{+m}
%b  +user        +ignore      comment      binds        ignores%b
%b  -user        -ignore      dccstat      debug        banner%b
%b  rehash       restart      uptime       clearqueue%b
%{+n}
For owners:
%b  die          simul        module       loadmod      unloadmod%b
%b  set          tcl          rehelp       modules      +lang%b
%b  -lang        +lsec        -lsec        lstat        relang%b
%{-}
